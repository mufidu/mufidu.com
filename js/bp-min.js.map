{"version":3,"file":"bp-min.js","sources":["../src/bp.js"],"sourcesContent":["(function (window, apiHost) {\n  if (window.beampipe) {\n    return;\n  }\n  var location = window.location;\n  var document = window.document;\n  var history = window.history;\n  var isLocal =\n    /^localhost$|^127(?:\\.[0-9]+){0,2}\\.[0-9]+$|^(?:0*\\:)*?:?0*1$/.test(\n      location.hostname\n    ) || location.protocol === \"file:\";\n  var ele =\n    document.querySelector(\"[data-beampipe-domain]\") ||\n    document.querySelector(\"[data-alysis-domain]\");\n  var domain =\n    ele.getAttribute(\"data-beampipe-domain\") ||\n    ele.getAttribute(\"data-alysis-domain\") ||\n    (isLocal ? \"localhost\" : location.host);\n  var track = function (event) {\n    var _a;\n    if (isLocal) {\n      console.warn(\"Ignoring in local mode\");\n      return;\n    }\n    var payload = {\n      type: event,\n      url:\n        location.protocol +\n        \"//\" +\n        location.hostname +\n        location.pathname +\n        location.search,\n      domain: domain,\n      referrer: document.referrer,\n      userAgent: window.navigator.userAgent,\n      source:\n        (_a = location.search.match(/[?&](ref|source|utm_source)=([^?&]+)/)) ===\n          null || _a === void 0\n          ? void 0\n          : _a[2],\n      screenWidth: window.innerWidth,\n    };\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", apiHost, true);\n    request.setRequestHeader(\"Content-Type\", \"application/json\");\n    request.send(JSON.stringify(payload));\n  };\n  var log = function () {\n    return track(\"page_view\");\n  };\n  window.beampipe = track;\n  if (history.pushState) {\n    var pushState_1 = history[\"pushState\"];\n    history.pushState = function () {\n      pushState_1.apply(this, arguments);\n      log();\n    };\n    window.addEventListener(\"popstate\", log);\n  }\n  log();\n})(window, \"https://beampipe.io/event\");\n"],"names":["window","apiHost","beampipe","location","document","history","isLocal","test","hostname","protocol","ele","querySelector","domain","getAttribute","host","track","event","_a","console","warn","payload","type","url","pathname","search","referrer","userAgent","navigator","source","match","screenWidth","innerWidth","request","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","log","pushState","pushState_1","apply","this","arguments","addEventListener"],"mappings":"0BAAA,SAAWA,EAAQC,GACjB,IAAID,EAAOE,SAAX,CAGA,IAAIC,EAAWH,EAAOG,SAClBC,EAAWJ,EAAOI,SAClBC,EAAUL,EAAOK,QACjBC,EACF,+DAA+DC,KAC7DJ,EAASK,WACgB,UAAtBL,EAASM,SACZC,EACFN,EAASO,cAAc,2BACvBP,EAASO,cAAc,wBACrBC,EACFF,EAAIG,aAAa,yBACjBH,EAAIG,aAAa,wBAChBP,EAAU,YAAcH,EAASW,MAChCC,EAAQ,SAAUC,GACpB,IAAIC,EACJ,GAAIX,EACFY,QAAQC,KAAK,8BADf,CAIA,IAAIC,EAAU,CACZC,KAAML,EACNM,IACEnB,EAASM,SACT,KACAN,EAASK,SACTL,EAASoB,SACTpB,EAASqB,OACXZ,OAAQA,EACRa,SAAUrB,EAASqB,SACnBC,UAAW1B,EAAO2B,UAAUD,UAC5BE,OAEI,QADDX,EAAKd,EAASqB,OAAOK,MAAM,+CACX,IAAPZ,OACN,EACAA,EAAG,GACTa,YAAa9B,EAAO+B,YAElBC,EAAU,IAAIC,eAClBD,EAAQE,KAAK,OAiBN,6BAjBuB,GAC9BF,EAAQG,iBAAiB,eAAgB,oBACzCH,EAAQI,KAAKC,KAAKC,UAAUlB,MAE1BmB,EAAM,WACR,OAAOxB,EAAM,cAGf,GADAf,EAAOE,SAAWa,EACdV,EAAQmC,UAAW,CACrB,IAAIC,EAAcpC,EAAmB,UACrCA,EAAQmC,UAAY,WAClBC,EAAYC,MAAMC,KAAMC,WACxBL,KAEFvC,EAAO6C,iBAAiB,WAAYN,GAEtCA,KA3DF,CA4DGvC"}